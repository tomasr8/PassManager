; Script generated by the Inno Setup Script Wizard.
; SEE THE DOCUMENTATION FOR DETAILS ON CREATING INNO SETUP SCRIPT FILES!

#define MyAppName "PassManager"
#define MyAppVersion "0.1.0"
#define MyAppURL "https://example.com/"
#define MyAppExeName "PassManager.exe"

[Setup]
; NOTE: The value of AppId uniquely identifies this application. Do not use the same AppId value in installers for other applications.
; (To generate a new GUID, click Tools | Generate GUID inside the IDE.)
AppId={{ED53DCFE-1536-4AA0-B668-503FB9C903E3}
AppName={#MyAppName}
AppVersion={#MyAppVersion}
;AppVerName={#MyAppName} {#MyAppVersion}
;AppPublisher={#MyAppPublisher}
AppPublisherURL={#MyAppURL}
AppSupportURL={#MyAppURL}
AppUpdatesURL={#MyAppURL}
; hardcoded install path for now
DefaultDirName={localappdata}\PassManager
DisableDirPage=yes
DefaultGroupName={#MyAppName}
DisableProgramGroupPage=yes
; pre and post install info
;InfoBeforeFile=PREINSTALL.txt
;InfoAfterFile=POSTINSTALL.txt
; Uncomment the following line to run in non administrative install mode (install for current user only.)
PrivilegesRequired=lowest

; compile path for the installer in the root folder of the project
OutputDir=.\installer
; name of the installer exe
OutputBaseFilename=PassManagerSetup
Compression=lzma
SolidCompression=yes
WizardStyle=modern
UsePreviousAppDir=no

[Languages]
Name: "english"; MessagesFile: "compiler:Default.isl"


[Tasks]
Name: "desktopicon"; Description: "{cm:CreateDesktopIcon}"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked
Name: "startmenu"; Description: "Create a start menu shortcut"; GroupDescription: "{cm:AdditionalIcons}"; Flags: unchecked


[Files]
; copy the files in both directories and preserve the directory structure
Source: "builds\PassManager-win32-x64\*"; DestDir: "{app}"; Flags: ignoreversion recursesubdirs createallsubdirs
Source: "icon.ico"; DestDir: "{app}"; Flags: ignoreversion

[Icons]
; Create desktop and start menu shortcuts
Name: "{autodesktop}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\icon.ico"; Tasks: desktopicon;
Name: "{group}\{#MyAppName}"; Filename: "{app}\{#MyAppExeName}"; IconFilename: "{app}\icon.ico"; Tasks: startmenu;

[Run]
; start after installation finished
Filename: "{app}\{#MyAppExeName}"; WorkingDir: "{app}"; Description: "{cm:LaunchProgram,#MyAppName}"; Flags: nowait postinstall skipifsilent


[InstallDelete]
; purge the install directory in case the directory structure
; changes between versions
Type: filesandordirs; Name: "{app}\*"
Type: filesandordirs; Name: "{app}"


[UninstallDelete]
; Remove any additional files that were created
; while the app was running
Type: filesandordirs; Name: "{app}\*"
Type: filesandordirs; Name: "{app}"

















